/**
 * Model file for Pharmaceuticals provenance
 */
namespace org.e599.model

asset Batch identified by batchId {
  o String batchId
  o DateTime batchDate optional
  o DateTime expirationDate optional
  --> Location manufactureLocation
  --> Product product
}

asset Product identified by productId {
  	o String productId
    o String productName
	  --> SupplyChainPartner manufacturer
}

/* Represents a specific product/package type. aka SKU */
asset Item identified by GTIN {
    o String GTIN
    o Long unitCount
    o Long dosage
    o String unit
    --> Product product
}

/* a parcel, pallet, or shipping container */
asset ShippingContainer identified by SSCC {
  	o String SSCC
    o String GTIN
    --> Location currentLocation
    --> IndividualPackage[] packages optional
    --> Product product optional
}

asset IndividualPackage identified by SGTIN {
    o String SGTIN
    --> Item item
    --> Batch batch
    --> Location currentLocation optional
}

asset Location identified by GLN {
    o String GLN
    o String address
	  --> SupplyChainPartner company
}

participant SupplyChainPartner identified by partnerId {
    o String partnerId
    o String companyName
}


/**
  The VisibilityRecord assets are created to store searchable records of the supply chain lifecycle.
  This allows us to search for delivery history for a GTIN,
  as there doesnt appear to be a way to quickly join data in Hyperledger queries....
  so every transaction will create a record that will 'flatten' the data that we want to query. 
 */
asset VisibilityRecord identified by transactionId {
  o String transactionId
  o String SSCC optional
  o String GTIN optional
  o String GLN
  o String[] SGTINs optional
  o String eventType
  o String businessStep
  o String action
  o String disposition
  o String locationText optional
  o DateTime eventTime
}


/**
  This transaction is executed when a container is shipped.
 */
transaction ShipTransaction {
    --> ShippingContainer container
    --> Location readPoint
}

/**
  This transaction is executed when a container is received.
 */
transaction ReceiveTransaction {
    --> ShippingContainer container
    --> Location readPoint
}

/**
  This transaction is executed when individual packages are added to a container.
 */
transaction PackageTransaction {
    --> ShippingContainer container
    --> IndividualPackage[] contents
    --> Location readPoint
}

event VisibilityEvent {
    --> VisibilityRecord record
}
